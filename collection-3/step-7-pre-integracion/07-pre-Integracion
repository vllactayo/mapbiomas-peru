// Aqui script de pre-integracion

/** 
 *  by: EYTC 
 */
 
var param = {
    ID_pais: 8,
    pais: 'PERU',
    years: [1985, 2000, 2008, 2022, 2023],  // Lista de años Solo para visualizacion
    version_output:'1',
    source:'Instituto del Bien Común (IBC)',
    buffer : false  // true and false // BUFFER solo en limite raisg
     }; 
     
// CODIGO DE REGION Y VERSION A INTEGRAR
var codesAndVersions = [
  // PERÚ
    //Amazonia
[70101, 17],
[70102, 15],
[70103, 15],
[70104, 15],
[70105, 25],
[70106, 25],
[70107, 15],
[70108, 15],
[70109, 15],
[70110, 17],
[70111, 15],
[70112, 15],
[70113, 15],
[70114, 15],
[70115, 15],
[70201, 23],
[70202, 22],
[70203, 15],
[70204, 15],
[70205, 23],
[70206, 35],
[70207, 15],
[70208, 14],
[70209, 15],
[70210, 23],
[70211, 22],
[70212, 15],
[70301, 26],
[70302, 35],
[70303, 25],
[70304, 25],
[70305, 25],
[70306, 24],
[70307, 25],
[70308, 25],
[70309, 26],
[70310, 15],
[70311, 15],
[70312, 15],
[70313, 16],
//     //Andes PACIFICO
//      [70401,	22],
//      [70402,	22],
//      [70403,	22],
//      [70404,	22],
//      [70405,	22],
//      [70406,	22],
//      [70407,	22],
//      [70408,	22],
//      //Andes RAISG
//            //Costa
//      [70501,	9],
//      [70502,	11],
//      [70503,	11],
//      [70504,	12],
//      [70505,	12],
//      [70506,	11],
//      [70507,	10],
//      [70508,	10],
];

var regionsClasificacionNoRaisg = codesAndVersions.map(function(li){return li[0]});

// Assets
//---------------------------------
var palettes = require('users/mapbiomas/modules:Palettes.js').get('classification8');
var dirs = require('users/mapbiomasperu/mapbiomas-lulc:collection-3/modules/CollectionDirectories.js');
var paths = dirs.listpaths(param.country);
var dirinputClass = paths.classification
var dirinputClassFil = paths.clasificacionFiltros

var dirout = 'projects/mapbiomas-raisg/MAPBIOMAS-PERU/COLECCION3/INTEGRACION'
var assetCountries = 'projects/mapbiomas-raisg/DATOS_AUXILIARES/ESTADISTICAS/COLECCION4/country';
var assetCountriesRaster = "projects/mapbiomas-raisg/DATOS_AUXILIARES/ESTADISTICAS/COLECCION4/country-raster";
var assetregionVectors= paths.regionVector
var regionesclassRaster = paths.regionClasRaster
var regionesMosaicRaster = paths.regionMosRaster
var assetmosaics= paths.mosaics_c4

var assetMosaic = paths.mosaics_c4_raisg;
var assetMosaicP2 = paths.mosaics_c4_nexgen;
var col2 = paths.collection2_PE

// convert vector to raster
//

function NamecountryCase (name){
          var paisLowerCase =''
          switch (name) {
            case "PERU":
                paisLowerCase = 'Perú';
                break;
            }
  return paisLowerCase
}
var regionClas = ee.FeatureCollection(assetregionVectors);
var countryraster = ee.Image(assetCountriesRaster).eq(param.ID_pais).selfMask()
var regionsRaster = ee.Image(regionesclassRaster)
Map.addLayer(regionsRaster.randomVisualizer(),{},'Regiones de clasificacion - raster',false)

var listRasterRegion = regionsClasificacionNoRaisg.map(function(regio){return regionsRaster.eq(regio).multiply(regio).selfMask().toUint32().rename('region')})
var regionsRasterSB = ee.ImageCollection.fromImages(ee.List(listRasterRegion)).mosaic()

if(param.buffer){
    var regionClas2  = ee.FeatureCollection('projects/mapbiomas-raisg/DATOS_AUXILIARES/VECTORES/clasificacion-regiones-4-buffer-250m')
    regionsRaster = ee.Image().uint32().paint({
                    featureCollection: regionClas2,
                    color: 'id_regionC'
                    }).rename(['regions']);
                    
   regionsRaster = regionsRaster.blend(regionsRasterSB)
   Map.addLayer(regionsRaster.randomVisualizer(),{},'regionsRasterBuffer',false)
}




var regionMosaicRaster = ee.Image(regionesMosaicRaster)
//
// Integrate
//
var collection
var collectionsByRegion = codesAndVersions
    .map(
        function (codeAndVersion) {
             if(codeAndVersion[1] === 1 || codeAndVersion[1]=== 3 || codeAndVersion[1]=== 4) {
               collection = ee.ImageCollection(dirinputClass)
             } else {
               collection = ee.ImageCollection(dirinputClassFil)
             }
             
            var images = collection
                .filterMetadata('code_region', 'equals', codeAndVersion[0])
                .filterMetadata('version', 'equals', codeAndVersion[1])
                .map(
                    function (image) {
                        return image.mask(regionsRaster.eq(codeAndVersion[0]));
                    }
                );
            //print(codeAndVersion[0], codeAndVersion[1])
            return images.mosaic().byte();
        }
    );

var allRegionsClassification = ee.ImageCollection.fromImages(ee.List(collectionsByRegion));
var integracion_v0 = allRegionsClassification.min()

var MosaicoCollection = ee.ImageCollection(assetMosaic).merge(ee.ImageCollection(assetMosaicP2))
                        .filter(ee.Filter.inList('year',param.years))
                        .filterMetadata('country', 'equals', param.pais)
                        .select(['swir1_median', 'nir_median', 'red_median'])
                        .map(
                            function (image) {
                                return image.updateMask(
                                    regionMosaicRaster.eq(ee.Number.parse(image.get('region_code')).toInt16()));
                            }
                        );

// Layer add

for (var yearI=0;yearI<param.years.length;yearI++) {
    var vis = {
        'bands': 'classification_'+param.years[yearI],
        'min': 0,
        'max': 62,
        'palette': palettes
    };
    var vis2 = {
    'bands': 'classification',
    'min': 0,
    'max': 62,
    'palette': palettes
    };
    Map.addLayer(MosaicoCollection.filterMetadata('year', 'equals', param.years[yearI]),{
      "bands":["swir1_median","nir_median","red_median"],
      "min":407,"max":3381}, 'Mosaic - ' + param.years[yearI],false)
    Map.addLayer(integracion_v0, vis, 'Clasificacion - '+param.years[yearI],false);

}

var prefixo_out = param.pais + '-' + 'CLASES-GENERALES' + '-' + param.version_output

var integracion_v0 = integracion_v0
                        .set('country', param.pais)
                        .set('theme', 'GENERAL')
                        .set('version', param.version_output)
                        .set('collection', '3.0')
                        .set('source', param.source);

print(integracion_v0, 'integracion_v0');



  var prefixo_out = param.pais + '-' + 'CLASES-GENERALES' + '-' + param.version_output
  var integracionyear = integracion_v0//.select('classification_'+year)
                          .rename('classification')
                          .set('country', param.pais)
                          .set('theme', 'GENERAL')
                          //.set('year', year)
                          .set('version', param.version_output)
                          .set('collection', '3.0')
                          .set('source', param.source);

      //print(year, integracionyear);
    
    Export.image.toAsset({
        'image':integracion_v0,
        'description': prefixo_out,
        'assetId': dirout+'/' +prefixo_out,
        'pyramidingPolicy': {
            '.default': 'mode'
        },
        'region': MosaicoCollection.geometry(),
        'scale': 30,
        'maxPixels': 1e13
    });

var RegionVector = ee.FeatureCollection(assetregionVectors)

Map.addLayer(RegionVector.style({fillColor: '00000000',color:'black', width: 1.5}), {}, 'RegionVector')
